<?xml version="1.0" encoding="utf-8"?><!--这里配置的action，要与Fragment的java中的事件匹配，否则会出错。配置destination目的，action的id，还可以在action配置动画-->
<navigation xmlns:android="http://schemas.android.com/apk/res/android"
		xmlns:app="http://schemas.android.com/apk/res-auto"
		xmlns:tools="http://schemas.android.com/tools"
		app:startDestination="@id/firstFragment">

	<fragment
			android:id="@+id/firstFragment"
			android:name="org.zhiwei.jetpack.nav.FragmentOne"
			android:label="fragment_one"
			tools:layout="@layout/fragment_one">
		<action
				android:id="@+id/go_fragment2"
				app:destination="@id/secFragment" />
	</fragment>
	<!--写法一-->
	<fragment
			android:id="@+id/secFragment"
			android:name="org.zhiwei.jetpack.nav.FragmentTwo"
			android:label="fragment_one"
			tools:layout="@layout/fragment_one">
		<!--向上返回到第一个fragment-->
		<action
				android:id="@+id/go_fragment1"
				app:popUpTo="@id/firstFragment" />
		<!--跳转新的 第三个fragment-->
		<action
				android:id="@+id/go_fragment3"
				app:destination="@id/thirdFragment" />
	</fragment>

	<!--写法二，单独嵌套一个navigation 标签，声明id ，并向内关联fragment，且上面的action destination就需要用这个id，而不是内部fragment的id
	 todo 这种写法，就是让Navigation关联一个新的路由表-->
	<!--	<navigation-->
	<!--			android:id="@+id/nav_graph_page3"-->
	<!--			app:startDestination="@id/thirdFragment">-->
	<!--	</navigation>-->
	<fragment
			android:id="@+id/thirdFragment"
			android:name="org.zhiwei.jetpack.nav.FragmentThree"
			android:label="fragment_Three"
			tools:layout="@layout/fragment_three">
		<!--还有一个其他标签 signleTop、
		popUpToInclusive 是返回栈内的fragment，并清空popUpTo所指向的那个fragment之上的所有fragment，
		如果这个true，则包括popUpTo的也清空，重建. todo 但是如果是最底层的那个，则不会被清掉。
		-->
		<action
				android:id="@id/go_fragment1"
				app:popUpTo="@id/secFragment"
				app:popUpToInclusive="false" />
	</fragment>
</navigation>
